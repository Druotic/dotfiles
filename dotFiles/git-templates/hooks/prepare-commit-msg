#!/usr/bin/env bash

# particularly useful for rebases where --no-verify does not work skip hooks
if [ "$NO_VERIFY" ]; then
    echo 'NO_VERIFY detected. Skipping jira ticket commit message insert.'
    exit 0
fi

COMMIT_MSG_FILE="$1"
SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )"

BRANCH_NAME=$(git symbolic-ref --short HEAD)
echo "[debug] BRANCH_NAME: '$BRANCH_NAME'"

# original expression:
#TICKET_NAME=$(echo $BRANCH_NAME | sed -e 's/^[^\/]*\/\([^-]*-[^-]*\)-.*/\1/')

# sed explanation: -n to not always print (doesn't distinguish between full
# match and no match, always prints by default), /p to print matches only
# another old expression... stopped working so switching to awk
#TICKET_NAME=$(echo "$BRANCH_NAME" | sed -nE 's/^([^-]+-[0-9]+)-[^0-9]*$/\1/p')
#TICKET_NAME=$(echo "$BRANCH_NAME" | awk -F- '{print $1"-"$2}')
TICKET_NAME=$(echo "$BRANCH_NAME" | awk -F- '/^[A-Z]+-[0-9]+.*$/ {print $1"-"$2}')
TICKET_NAME=${TICKET_NAME:-NO-TICKET}
echo "[debug] TICKET_NAME (final): '$TICKET_NAME'"

BRANCH_EXCLUDED=$(printf "%s\n" "${BRANCHES_TO_SKIP[@]}" | grep -c "^$BRANCH_NAME$")
COUNT_IN_MSG=$(cat $1 | grep -c "^[^#].*$TICKET_NAME")
SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )"

# If it isn't excluded or already in commit message, insert the ticket name to the given message
if [ -n "$BRANCH_NAME" ] && ! [[ "$BRANCH_EXCLUDED" -eq 1 ]] && [[ "$COUNT_IN_MSG" -eq 0 ]]; then
    printf "\n\n%s" "refers to [$TICKET_NAME]" >> $COMMIT_MSG_FILE
fi

source "$SCRIPT_DIR/helpers.sh"
execute_local_hook
