#visually breaks prompt sometimes right now
#export PS1="\[\e[48;5;237m \W \$\e[0m \]"
#export PS1='$USER@$(hostname):$(basename $PWD)$ '
#export PS1="\[\033[0;35m\]\h\[\033[0;33m\] \w\[\033[00m\]: ???"
# hide computer name

# Differentiate files, directories, etc
# OSX/BSD
#export LSCOLORS="GxfxcxdxBxegecabagacad"
# Linux
export LS_COLORS="di=1;36:ln=35:so=32:pi=33:ex=1;31:bd=34;46:cd=34;42:su=30;41:sg=30;46:tw=30;42:ow=30;43"
alias ls='ls -lGH --color=auto'

# Zsh to use the same colors as ls
zstyle ':completion:*' list-colors ${(s.:.)LS_COLORS}  

# OSX-isms to make OSX-centric instructions less painful to work around
alias pbcopy='xclip -selection clipboard'
alias pbpaste='xclip -selection clipboard -o'
alias open='xdg-open'

alias git-recent="git for-each-ref --sort=committerdate refs/heads/ --format='%(HEAD) %(color:yellow)%(refname:short)%(color:reset) - %(color:red)%(objectname:short)%(color:reset) - %(contents:subject) - %(authorname) (%(color:green)%(committerdate:relative)%(color:reset))'"
alias git-rm-remote-tag="git push --delete origin"

alias jsonFileToEscapedString="node -e \"require('assert')(process.argv[1]); const file = require(process.argv[1]); console.log(JSON.stringify(JSON.stringify(file)))\""

alias rn='react-native'
alias vim='nvim'

alias ds='docker stop -t 3 $(docker ps -aq)'
alias untgz='tar -xvzf'

alias fuckYarn="sed -i '' s/registry.yarnpkg.com/registry.npmjs.org/g"
alias commitFuckYarn="git commit -am \"s/registry.yarnpkg.com.com/registry.npmjs.org/g yarn.lock\""

alias cdl='cd ~/repos/work/lifeomic'
alias cdc='cd ~/repos/work/lifeomic-clone'
alias cdc2='cd ~/repos/work/lifeomic-clone-2'
# needs to be same depth as cdl... but otherwise, naming is kinda useless/deep
alias cdp='cd ~/repos/other/misc'
alias cdl='cd ~/repos/work/lifeomic'
alias life-extend-device="cd ~/repos/work/lifeomic/life-extend && adb reverse tcp:8081 tcp:8081 && react-native run-android --appFolder lifeextend"
alias life-extend-device-full="cd ~/repos/work/lifeomic/life-extend/android && ./gradlew clean && cd ../ && rm -rf node_modules && yarn full-install && adb reverse tcp:8081 tcp:8081 && react-native run-android --appFolder lifeextend"

unlinkPackage () {
  echo "Unlinking $1..."
  pushd ~/.config/yarn/link/$1
  ls
  yarn unlink
  popd
}

# Repeat command ($2) $1 times, exit early if failure
repeat-it () {
  RE='^[0-9]+$' 
  COUNT=$1
  if ! [[ $COUNT =~ $RE ]] ; then
    echo "First arg must be a number, found '$COUNT'"
    return 1
  fi
  shift
  echo "Executing the following command $COUNT times: '$@'"
  for i in `seq 1 $COUNT`; do $@ || return ; done
}

# Repeat command ($2) $1 times, exit early if failure
repeat-it-count-failures () {
  RE='^[0-9]+$' 
  COUNT=$1
  if ! [[ $COUNT =~ $RE ]] ; then
    echo "First arg must be a number, found '$COUNT'"
    return 1
  fi
  shift
  CMD=$@
  FAIL_COUNT=0
  echo "Executing the following command $COUNT times: '$@'"
  for i in `seq 1 $COUNT`
  do
    echo "Starting run #${i}..."
    $CMD
    if [[ $? == 1 ]]; then
      echo "Failure detected in run #${i}"
      let "FAIL_COUNT++"
    fi
  done
  echo "All done. $FAIL_COUNT/$COUNT failures detected."
}

# $1 - ag basic search pattern, $2 - sed expression
# recursively replaces file contents
superSed () {
  ag -l "$1" . | xargs sed -i '' -E "$2"
}

json_escape () {
    printf '%s' "$1" | node 
    printf '%s' "$1" | python -c 'import json,sys; print(json.dumps(sys.stdin.read()))'
}

port_in_use () {
  echo "Checking if port $1 is in use..."
  output=$(lsof -nP -iTCP:$1 | grep LISTEN)
  if [ "$?" == "1" ]; then
    echo "Port $1 not in use."
  else
    echo "$output"
  fi
}

### LifeOmic specific ###

#reCloneLORepos () {
  #rm -rf ~/repos/work/lifeomic-clone
  #local key=$(security find-generic-password -l bitbucket_oauth_consumer_key -w)
  #local secret=$(security find-generic-password -l bitbucket_oauth_consumer_secret -w)
  #lifeomic-clone-repos -t ~/repos/work/lifeomic-clone -k $key -s $secret
#}


wellness_deployment_dashboard () {
  lifeomic-deployment-dashboard --service << EOF \
provision-wellness-accounts \
provision-wellness-gateway \
wellness-admin-app \
wellness-configuration-service \
wellness-login \
wellness-monitor
EOF
}

mobile_deployments () {
 lifeomic-deployment-dashboard --service << EOF \
notification-service \
life-service \
social-circle-service \
file-service \
user-service \
graphql-proxy-service \
life-monitor \
life-social-queries-service \
provision-life
EOF

}

# Note: org repo listing type=all is busted and only returns public. Have to separately specify internal/public to get everything
lifeomic_clone_repos_gh () { [ -z "$GITHUB_PAT" ] && echo "Must provide GITHUB_PAT" || for type in internal public; do for page in {1..99999}; do URLS=$(curl -s -H "Authorization: token ${GITHUB_PAT}" "https://api.github.com/orgs/lifeomic/repos?per_page=100&page=$page&type=$type" | jq -r ".[].clone_url"); [ -z "$URLS" ] && echo "Done processing $type repositories." && break || for repo in $URLS; do git clone "$repo" 2>&1 | head; done; done; done }

# Appends every command to the history file once it is executed
setopt inc_append_history
# Reloads the history whenever you use it
setopt share_history

export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

source <(lifeomic-aws -v partition commercial)
LIFEOMIC_LOGIN_USERNAME=james.beavers
LIFEOMIC_LOGIN_MFA=push
export LIFEOMIC_LOGIN_USERNAME LIFEOMIC_LOGIN_MFA

#History
setopt hist_ignore_all_dups inc_append_history
HISTFILE=~/.zhistory
HISTSIZE=10000
SAVEHIST=10000
